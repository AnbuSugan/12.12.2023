//data
//ProductList
export const ProductList = [
  {
    id: 1,
    title: "Full Stack",
    description: "Master both front-end and back-end technologies",
    price: 50000,
    discountPercentage: 12.96,
    rating: 4.69,
    stock: 94,
    brand: "Full Stack",
    category: "ComputerCourse",
    thumbnail: require("../img/img_sm_14.jpg"),
    images: [
      "https://i.dummyjson.com/data/products/1/1.jpg",
      "https://i.dummyjson.com/data/products/1/2.jpg",
      "https://i.dummyjson.com/data/products/1/3.jpg",
      "https://i.dummyjson.com/data/products/1/4.jpg",
      require("../img/img_sm_14.jpg"),
    ],
  },
  {
    id: 2,
    title: "Master Data Science",
    description:
      "Delve deep into advanced programming languages, algorithms, and data structures.",
    price: 60000,
    discountPercentage: 17.94,
    rating: 4.44,
    stock: 34,
    brand: "Data Science",
    category: "Computer Course",
    thumbnail: require("../img/img_sm_15.jpg"),
    images: [
      "https://i.dummyjson.com/data/products/2/1.jpg",
      "https://i.dummyjson.com/data/products/2/2.jpg",
      "https://i.dummyjson.com/data/products/2/3.jpg",
      require("../img/img_sm_15.jpg"),
    ],
  },
  {
    id: 3,
    title: "Automation Testing",
    description:
      "Gain in-depth knowledge of Selenium, the industry-standard for web automation testing.",
    price: 60000,
    discountPercentage: 15.46,
    rating: 4.09,
    stock: 0,
    brand: "Selenium Testing",
    category: "computer course",
    thumbnail: require("../img/img_sm_15.jpg"),
    images: [require("../img/img_sm_15.jpg")],
  },
  {
    id: 4,
    title: "UI/UX Program",
    description:
      "Learn to use industry-standard design tools such as Adobe XD, Sketch, and Figma.",
    price: 280,
    discountPercentage: 17.91,
    rating: 4.3,
    stock: 123,
    brand: "Ui/Ux Program",
    category: "computer course",
    thumbnail: require("../img/img_sm_16.jpg"),
    images: [
      "https://i.dummyjson.com/data/products/4/1.jpg",
      "https://i.dummyjson.com/data/products/4/2.jpg",
      "https://i.dummyjson.com/data/products/4/3.jpg",
      "https://i.dummyjson.com/data/products/4/4.jpg",
      require("../img/img_sm_16.jpg"),
    ],
  },
  {
    id: 5,
    title: "Java Automation",
    description:
      "Develop a strong foundation in Java programming, tailored specifically for automation testing.",
    price: 85000,
    discountPercentage: 10.58,
    rating: 4.09,
    stock: 32,
    brand: "Java Automation",
    category: "computer course",
    thumbnail: require("../img/img_sm_17.jpg"),
    images: [
      "https://i.dummyjson.com/data/products/5/1.jpg",
      "https://i.dummyjson.com/data/products/5/2.jpg",
      require("../img/img_sm_17.jpg"),
    ],
  },
  {
    id: 6,
    title: "DevOps Program",
    description:
      "Gain a solid understanding of DevOps principles, practices, and culture. Explore the importance of collaboration, communication, and continuous improvement in a DevOps environment.",
    price: 55000,
    discountPercentage: 11.02,
    rating: 4.57,
    stock: 83,
    brand: "Devops Program",
    category: "Computer Course",
    thumbnail: require("../img/img_sm_18.jpg"),
    images: [
      "https://i.dummyjson.com/data/products/6/1.png",
      "https://i.dummyjson.com/data/products/6/2.jpg",
      "https://i.dummyjson.com/data/products/6/3.png",
      require("../img/img_sm_17.jpg"),
    ],
  },
];
//Dashboard.js
import React from "react";
import "./Dashboard.css";
import { ProductList } from "../data/ProductList";
import ProductCard from "../ProductCart/ProductCart";

const Dashboard = () => {
  return (
    <div
      className="d-flex flex-wrap justify-content-center p-3"
      style={{ marginTop: "10%" }}
    >
      {ProductList.map((product) => (
        <ProductCard {...product} key={product.id} />
      ))}
    </div>
  );
};

export default Dashboard;

//Productcard

import React from "react";
import "./ProductCard.css";
import { useNavigate } from "react-router-dom";

export default function ProductCard(props) {
  const navigate = useNavigate();
  return (
    <div
      className="card m-2 cursor-pointer"
      style={{ width: 250 }}
      role="button"
      onClick={() => navigate(`/Product/${props.id}`)}
    >
      <div className="mt-2">
        <img
          src={props.thumbnail}
          height={150}
          width={180}
          alt={props.title}
          className="images"
        />
      </div>
      <div className="card-body">
        <h5 className="card-title">{props.title}</h5>
        <h6 className="mt-2">Price: {`₹${props.price}`}</h6>
        <h6 className="mt-2">Discount:{props.discountPercentage}%</h6>
        <h6 className="mt-2">Rating:{props.rating}</h6>
        <div className="mt-4">
          {props.stock > 0 ? (
            <button className="btn btn-success">Available</button>
          ) : (
            <button className="btn btn-outline-danger">out of stock</button>
          )}
        </div>
      </div>
    </div>
  );
}
//ProductCart.css
.images {
  border-radius: 9px;
}
//Product
import React from "react";
import { useParams } from "react-router-dom";
import { ProductList } from "../data/ProductList";
import { useDispatch } from "react-redux";
import { addItem } from "../redux/reducer/cart";

const Product = () => {
  const params = useParams();
  const dispatch = useDispatch();
  const props = ProductList.find(
    (element) => element.id === parseInt(params.id)
  );
  const addToCart = () => {
    dispatch(addItem(props));
  };
  return (
    <div className="card" style={{ marginTop: "8%" }}>
      <div style={{ marginTop: "3%" }}>
        <img
          src={props.thumbnail}
          height={350}
          width={400}
          alt={props.title}
          className="images"
        />
      </div>
      <div className="card-body mt-3">
        <h5 className="card-title">{props.title}</h5>
        <h6 className="mt-2">Price: {`₹${props.price}`}</h6>
        <h6 className="mt-2">Discount:{props.discountPercentage}%</h6>
        <h6 className="mt-2">Rating:{props.rating}</h6>
        <div className="mt-4">
          {props.stock > 0 ? (
            <>
              <button className="btn btn-success">Buy Now</button>
              <button className="btn btn-success  ms-3" onClick={addToCart}>
                Add to cart
              </button>
            </>
          ) : (
            <button className="btn btn-outline-danger">out of stock</button>
          )}
        </div>
      </div>
    </div>
  );
};

export default Product;


